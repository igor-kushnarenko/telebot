import pickle

import telebot
from telebot.types import Message

from parsers.megaparser import parser_dict
from sripts import keyboards
from settings import TOKEN
from sripts.logging import log, configure_logging
from text_data import text_data


bot = telebot.TeleBot(TOKEN)

USERS_ID = set()

main_keyboard = keyboards.main_keyboard()
transfer_keyboard = keyboards.transfer_keyboard()
restaurant_keyboard = keyboards.restarurant_keyboard()


@bot.message_handler(commands=['start'])
def send_welcome(message):
    bot.send_message(message.chat.id, text_data['instruction']['start'], reply_markup=main_keyboard)


@bot.message_handler(commands=['help'])
def send_help(message):
    bot.send_message(message.chat.id, text_data['instruction']['help'], reply_markup=main_keyboard)


@bot.message_handler(commands=['awards'])
def message_awards(message):
    keyboard = telebot.types.InlineKeyboardMarkup()
    keyboard.add(telebot.types.InlineKeyboardButton(
        '–ü—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞—Ç—å', url='https://www.luxuryhotelawards.com/hotel/alean-family-resort-spa-doville/'))
    bot.send_message(
        message.chat.id, text_data['awards'], reply_markup=keyboard)


@bot.message_handler(content_types=['text'])
def inline_key(message: Message):

    log.info(f'{message.from_user.id}, {message.from_user.first_name} => {message.text}')

    text = message.text.lower()
    text_list = text.split(' ')
    for word in text_list:
        if word in text_data['hello_list']:
            answer = '–î–æ–±—Ä—ã–π –¥–µ–Ω—å! –î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –Ω–∞–∂–º–∏—Ç–µ /start\n–î–ª—è –ø–æ–º–æ—â–∏, –Ω–∞–∂–º–∏—Ç–µ /help\n'

            with open('user_id.pickle', 'rb') as f:
                USERS_ID = pickle.load(f)
            if message.from_user.id in USERS_ID:
                answer = f'–†–∞–¥ –≤–∏–¥–µ—Ç—å –í–∞—Å —Å–Ω–æ–≤–∞ {message.from_user.first_name}!\n' \
                         f'–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –Ω–∞–∂–º–∏—Ç–µ /start\n–î–ª—è –ø–æ–º–æ—â–∏, –Ω–∞–∂–º–∏—Ç–µ /help\n'
            bot.send_message(message.chat.id, f'{answer}', reply_markup=main_keyboard)
            USERS_ID.add(message.from_user.id)
            with open('user_id.pickle', 'wb') as f:
                pickle.dump(USERS_ID, f)

        elif word in text_data['goodbye_list']:
            bot.send_message(message.chat.id, '–î–æ –Ω–æ–≤—ã—Ö –≤—Å—Ç—Ä–µ—á!')

        elif word in text_data['eat_list']:
            bot.send_message(message.chat.id, f'–í—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –æ–¥–Ω–æ –∏–∑ –Ω–∞—à–∏—Ö –∑–∞–≤–µ–¥–µ–Ω–∏–π:\n\n',
                             reply_markup=restaurant_keyboard)

    if message.text.lower() == 'üîô –Ω–∞–∑–∞–¥':
        bot.send_message(message.chat.id, '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', reply_markup=main_keyboard)

    elif message.text.lower() == 'üì∞ –Ω–æ–≤–æ—Å—Ç–∏':
        bot.send_message(message.chat.id, parser_dict['news_parser'], reply_markup=main_keyboard,
                         disable_web_page_preview=True)

    elif message.text.lower() == '—Ä–µ—Å—Ç–æ—Ä–∞–Ω—ã –∏ –±–∞—Ä—ã':
        bot.send_message(message.chat.id, '–†–µ—Å—Ç–æ—Ä–∞–Ω—ã –∏ –±–∞—Ä—ã', reply_markup=restaurant_keyboard)

    elif message.text.lower() == '—Ä–µ—Å—Ç–æ—Ä–∞–Ω—ã':
        bot.send_message(message.chat.id, f'{parser_dict["restaurant_parser"][0]}\n'
                                          f'{parser_dict["restaurant_parser"][1]}\n', reply_markup=restaurant_keyboard)

    elif message.text.lower() == '–±–∞—Ä—ã':
        bot.send_message(message.chat.id, f'{parser_dict["restaurant_parser"][2]}\n'
                                          f'{parser_dict["restaurant_parser"][3]}\n'
                                          f'{parser_dict["restaurant_parser"][4]}\n'
                                          f'{parser_dict["restaurant_parser"][5]}\n', reply_markup=restaurant_keyboard)

    elif message.text.lower() == '–¥–µ—Ç—è–º':
        bot.send_message(message.chat.id, f'{parser_dict["restaurant_parser"][6]}\n', reply_markup=restaurant_keyboard)

    elif message.text.lower() == '‚ùáÔ∏è –∞–∫—Ü–∏–∏ –∏ —Å–∫–∏–¥–∫–∏':
        bot.send_message(message.chat.id, parser_dict['promotion_parser'], reply_markup=main_keyboard,
                         disable_web_page_preview=True)

    elif message.text.lower() == '–º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è':
        bot.send_message(message.chat.id, parser_dict['calendar_parser'], reply_markup=main_keyboard)

    elif message.text.lower() == '—Ç—Ä–∞–Ω—Å—Ñ–µ—Ä':
        bot.send_message(message.chat.id, '–ó–∞–∫–∞–∑–∞—Ç—å —Ç—Ä–∞–Ω—Å—Ñ–µ—Ä: 88002507797', reply_markup=transfer_keyboard)

    elif message.text.lower() == '–∫–æ–Ω—Ç–∞–∫—Ç—ã':
        bot.send_message(message.chat.id, '–ó–≤–æ–Ω–∏—Ç–µ –ø–æ –Ω–æ–º–µ—Ä—É: 8800200600', reply_markup=main_keyboard)


configure_logging()
bot.polling()
